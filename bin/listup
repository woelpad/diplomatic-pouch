#!/bin/bash
# Adds articles in current issue to the Zine list of all articles.
# Must be run inside the main directory of the issue without any parameters.
# If this is not the most recent issue, insert empty lines in the list file in places where the entries can be added.

function operate() {
	file=$1
	if [ "$2" == 2 ]
	then
		file=$file.bak
	fi
	if [ -f $file ]
	then
		if [ "$2" == 1 ]
		then
			cp -f $file $file.bak
			file=$file.bak
		fi
		if [ "$2" == 3 ]
		then
			if [ -f $file.bak ]
			then
				rm $file.bak
			fi
		fi
	fi
	echo $file
}
function exist() {
	if [ ! -f $1 ]
	then
		echo "$2 file $1 not found."
		exit
	fi
}
function norm() {
	echo $1 | sed 'y/SFWMRAB/1231233/; s/\(.\)\(.*\)\(.\)/\2\1\3/'
}

index=$(operate index.html)
exist $index "Issue index"
list=$(operate ../list.html)
exist $list "Zine list"
season=$(pwd | sed '1 s/.*\///g')
issue=
shopt -s nocasematch
while read info
do
	anchor=$(echo "$info" | sed 's/\^.*//')
	if [[ "$anchor" == "$info" ]]
	then
		issue=$anchor
		continue
	fi
	info=$(echo "$info" | sed 's/[^^]*^//')
	writer=$(echo "$info" | sed 's/^/ (/;s/\^.*/)/')
	info=$(echo "$info" | sed 's/[^^]*^//')
	path=$(echo "$info" | sed 's/\^.*//')
	info=$(echo "$info" | sed 's/[^^]*^//')
	title=$info
	section=$(cat $list | sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{/<a name=\"*'$anchor'\"*>/I p}}')
	if [ -z "$section" ]
	then
		echo "Section $anchor not found in $list."
		continue
	fi
	topic=$(echo $section | sed -n 's/.*<[bi]>\([^<>]*\)<\/[bi]>.*/\1/I p')
	if [ -z "$topic" ]
	then
		echo "Topic not found in section $section."
		continue
	fi
	author=$(echo $section | sed -n 's/.*<\/b> *\( (.*)\) *$/\1/I p')
	# Remove topic if title starts with topic followed by a punctuation mark, or replace it with the name of the issue if the title is the topic.
	if [[ "$title" == "$topic"* ]]
	then
		trunk=$(echo "$title" | sed 's/'$(echo "$topic" | sed 's/././g')'//')
		if [ -z "$trunk" ]
		then
			if [ -z "$issue" ]
			then
				echo "No issue name found for topic \"$topic\""
				continue
			fi
			title=$issue
		else
			tail=$(echo "$trunk" | sed '/^ *.  */ {s/^ *.  *//;q};s/^ *\&[^;][^;]*;  *//')
			if [ -n "$tail" ]
			then
				if [[ "$trunk" != "$tail" ]]
				then
					title=$tail
				fi
			fi
		fi
	fi
	# Check if the article has appeared before in the current section.
	prelink=
	# Don't pipe the grep to while, otherwise the prelink variable will not be retained after it ends.
	while read match
	do
		if [[ "$title" == $(echo $match | sed -n 's/.*<b>\(.*\)<\/b>.*/\1/I p') ]]
		then
			prelink=$(echo $match | sed -n 's/.*<a href="*\([^\">]*\)"*>.*/\1/I p')
			if [ -n "$prelink" ]
			then
				preseason="$(echo $prelink | sed -n 's/^\([^/]*\)\/.*$/\1/ p')"
				if [[ "$preseason" != "$season" ]]
				then
					echo "\"$title\" already appeared in $preseason."
				else
					echo "\"$title\" already added."
				fi
				break
			fi
		fi
	done <<< "$(sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{/<a name=\"*'$anchor'\"*>/I,/^ *$/ p}}' $list | grep "$title")"
	if [ -n "$prelink" ]
	then
		continue
	fi
	# Check if the article has appeared before in any section, unless the title is generic.
	if [[ "$title" != "$issue" ]]
	then
		while read match
		do
			if [[ "$title" == $(echo $match | sed -n 's/.*<b>\(.*\)<\/b>.*/\1/I p') ]]
			then
				prelink=$(echo $match | sed -n 's/.*<a href="*\([^\">]*\)"*>.*/\1/I p')
				if [ -n "$prelink" ]
				then
					preseason="$(echo $prelink | sed -n 's/^\([^/]*\)\/.*$/\1/ p')"
					if [[ "$preseason" != "$season" ]]
					then
						echo "\"$title\" already appeared in $preseason under a different section."
					else
						echo "\"$title\" already appeared under a different section."
					fi
					break
				fi
			fi
		done <<< "$(sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{p}}' $list | grep "$title")"
	fi
	if [ -n "$prelink" ]
	then
		continue
	fi
	if [[ "$writer" == "$author" ]]
	then
		writer=
	fi
	# Check if there's an article written in a later issue under this topic.
	postseason=
	while read match
	do
		if [[ $(norm $season) < $(norm $match) ]]
		then
			postseason=$match
			break
		fi
	done <<< "$(sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{/<a name=\"*'$anchor'\"*>/I,/^ *$/ {s/.*<a href=\"*\([SFW][0-9][0-9]*[MRAB]\)\/.*/\1/I p}}}' $list)"
	entry=$(echo "<dd><li><a href=\"$path\"><b>$title</b></a>$writer</li></dd>")
	if [ -z "$postseason" ]
	then
		sed -i '/<!--.*-->/ !{/<!--/,/-->/ !{/<a name=\"*'$anchor'\"*>/I,/^ *$/ {/^ *$/ i'"$entry"'
		}}}' $list
	else
		sed -i '/<!--.*-->/ !{/<!--/,/-->/ !{/<a name=\"*'$anchor'\"*>/I,/<a href=\"*'$postseason'\//I {/<a href=\"*'$postseason'\//I i'"$entry"'
		}}}' $list
	fi
done <<< "$(cat $index | sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{
	s/.*<h2.*>\(.*\)<\/h2>.*/\1/I p
	/list.html#/{s/[^#]*#//;s/".*//;N;s/[ \t]*\n[ \t]*/^/;s/<.>//g;s/:.*=\"*/^'$season'\//;s/\"*>/^/;s/<\/a>.*//I;p;}
}}')"

# Update the Pouch index.
pouch=$(operate ../../index.html)
exist $pouch "Pouch index"
preseason=$(sed -n '/<!--.*-->/ !{/<!--/,/-->/ !{/<a href=\"*Zine\/[SFW][0-9][0-9]*[MRAB]\"*>/I {s/.*<a href=\"*Zine\/\([^\">]*\)\"*>.*/\1/I; y/sfwmrab/SFWMRAB/; p; q}}}' $pouch)
if [ -z "$preseason" ]
then
	echo "No Zine issue found in the Pouch index file."
	exit
fi
if (( $(norm $season) <= $(norm $preseason) ))
then
	echo "The latest issue in the Pouch index file is $preseason."
	exit
fi
sed -i '/<!--.*-->/ !{/<!--/,/-->/ !{/<a href=\"*Zine\/'$preseason'\"*><img/I,/The <a href=\"*Zine\/'$preseason'\"*>/ {s/'$preseason'/'$season'/I; s/\([\">]\)[^\">]* Issue\([\"<>]\)/\1'"$issue"'\2/I}}}' $pouch
